@model GuitLab.Models.ViewModels.Lab.ServicesViewModel

@{
    ViewBag.Title = "Add Service";
}

<h2>Add Service</h2>

@if (TempData["msg"] != null)
{
    <div class="alert alert-success">
        @TempData["msg"]
    </div>
}

@using (Html.BeginForm("AddService","Shop", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-0">
                @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label" })
            </div>

            @Html.TextAreaFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">

            <div class="row">
                <div class="col-0 pl-3">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label pr-2" })
                </div>

            </div>
            @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Select Category", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">

            <div class="col-0">
                <label class="control-label">Service Image</label>
            </div>

            <img id="imgpreview" src="~/Content/img/no_image.png"/>

            <div class="col-0">
                <input type="file" name="file" id="imageUpload" />
            </div>


        </div>

        <div class="form-group">
            <input type="submit" value="Add Service" class="btn btn-success" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Services", "Services", "", new { @class = "btn btn-outline-success" })
</div>

@section Scripts
{
    <script src="~/Content/GuitJs/AddService.js"></script>
}
