@model GuitLab.Models.ViewModels.Pages.PageViewModel

@{
    ViewBag.Title = "Edit Page";
}

<h2>Edit Page</h2>

@if (TempData["msg"] != null)
{
    <div class="alert alert-success">
        @TempData["msg"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label" })

            @if (Model.Slug == "home")
            {
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            }
            else
            {
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
            }

            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bodey, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Bodey, new { @id = "BodeyEditor", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Bodey, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sorting, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Sorting, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sorting, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-outline-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Pages", "Index", "", new { @class = "btn btn-outline-success" })
</div>


@section Scripts
{
    <script>
        CKEDITOR.replace("BodeyEditor");
    </script>

}